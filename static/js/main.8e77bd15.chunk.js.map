{"version":3,"sources":["components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","App.jsx","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","searchQuery","className","src","alt","highlightClassName","searchWords","textToHighlight","href","defaultProps","MoviesList","movies","moviesList","filter","movie","toLowerCase","includes","map","key","imdbId","App","state","handleChange","event","setState","target","value","trimLeft","this","htmlFor","type","id","placeholder","onChange","moviesFromServer","Component","ReactDOM","render","document","getElementById"],"mappings":"myEAKaA,EAAY,SAAC,GAAD,IAErBC,EAFqB,EAErBA,MACAC,EAHqB,EAGrBA,YACAC,EAJqB,EAIrBA,OAAQC,EAJa,EAIbA,QACRC,EALqB,EAKrBA,YALqB,OAQvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKJ,EACLK,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cACX,kBAAC,IAAD,CACEG,mBAAmB,gBACnBC,YAAa,CAACL,GACdM,gBAAiBV,OAMzB,yBAAKK,UAAU,WACb,kBAAC,IAAD,CACEG,mBAAmB,gBACnBC,YAAa,CAACL,GACdM,gBAAiBT,IAEnB,6BACA,uBAAGU,KAAMR,GAAT,YAeRJ,EAAUa,aAAe,CACvBX,YAAa,IC7DR,IAAMY,EAAa,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQV,EAAkB,EAAlBA,YAC7BW,EAAaD,EAAOE,QAAO,SAAAC,GAAK,OAAIA,EAAMjB,MAC7CkB,cAAcC,SAASf,EAAYc,gBACjCD,EAAMhB,YAAYiB,cAAcC,SAASf,EAAYc,kBAE1D,OACE,yBAAKb,UAAU,UACZU,EAAWK,KAAI,SAAAH,GAAK,OACnB,kBAAC,EAAD,eACEI,IAAKJ,EAAMK,QACPL,EAFN,CAGEb,YAAaA,UAmBvBS,EAAWD,aAAe,CACxBE,OAAQ,I,WC/BGS,EAAb,4MACEC,MAAQ,CACNpB,YAAa,IAFjB,EAKEqB,aAAe,SAACC,GACd,EAAKC,SAAS,CACZvB,YAAasB,EAAME,OAAOC,MAAMC,cAPtC,4CAWE,WACE,IAAQ1B,EAAgB2B,KAAKP,MAArBpB,YAER,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAO2B,QAAQ,eAAe3B,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACE4B,KAAK,OACLC,GAAG,eACH7B,UAAU,QACV8B,YAAY,mBACZN,MAAOzB,EACPgC,SAAUL,KAAKN,kBAMvB,kBAAC,EAAD,CACEX,OAAQuB,EACRjC,YAAaA,KAIjB,yBAAKC,UAAU,WAAf,0BA1CR,GAAyBiC,aCAzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8e77bd15.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\nimport Highlighter from 'react-highlight-words';\n\nexport const MovieCard = (\n  {\n    title,\n    description,\n    imgUrl, imdbUrl,\n    searchQuery,\n  },\n) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">\n            <Highlighter\n              highlightClassName=\"higlightWords\"\n              searchWords={[searchQuery]}\n              textToHighlight={title}\n            />\n          </p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        <Highlighter\n          highlightClassName=\"higlightWords\"\n          searchWords={[searchQuery]}\n          textToHighlight={description}\n        />\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n  searchQuery: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies, searchQuery }) => {\n  const moviesList = movies.filter(movie => movie.title\n    .toLowerCase().includes(searchQuery.toLowerCase())\n    || movie.description.toLowerCase().includes(searchQuery.toLowerCase()));\n\n  return (\n    <div className=\"movies\">\n      {moviesList.map(movie => (\n        <MovieCard\n          key={movie.imdbId}\n          {...movie}\n          searchQuery={searchQuery}\n        />\n      ))}\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n  searchQuery: PropTypes.string.isRequired,\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      searchQuery: event.target.value.trimLeft(),\n    });\n  }\n\n  render() {\n    const { searchQuery } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <div className=\"box\">\n            <div className=\"field\">\n              <label htmlFor=\"search-query\" className=\"label\">\n                Search movie\n              </label>\n\n              <div className=\"control\">\n                <input\n                  type=\"text\"\n                  id=\"search-query\"\n                  className=\"input\"\n                  placeholder=\"Type search word\"\n                  value={searchQuery}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <MoviesList\n            movies={moviesFromServer}\n            searchQuery={searchQuery}\n          />\n\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}